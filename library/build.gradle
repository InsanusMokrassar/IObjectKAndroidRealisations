apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group = 'com.github.insanusmokrassar'
def artifactName = "IObjectKAndroidRealisations"
version = 10

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.0"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode project.version
        versionName "${project.version/100}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation ('com.github.insanusmokrassar:IObjectKRealisations:1.5', {
        exclude group: 'org.json', module: 'json'
    })
    implementation 'com.github.insanusmokrassar:IObjectK:1.3'
    testImplementation 'junit:junit:4.12'
}

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://github.com/InsanusMokrassar/IObjectKAndroidRealisations/blob/master/LICENSE"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "Ovsiannikov Aleksei"
            email "ovsyannikov.alexey95@gmail.com"
        }
    }

    scm {
        url "https://github.com/InsanusMokrassar/IObjectKAndroidRealisations.git"
    }
}


publishing {
    publications {
        IObjectKAndroidRealisations(MavenPublication) {
            groupId project.group
            artifactId artifactName
            version "${project.version / 100}"
            artifact "$buildDir/outputs/aar/library-release.aar"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', "Implementations of IObjectK for android")
                root.appendNode('name', 'IObjectK Android Realisations')
                root.appendNode('url', 'https://github.com/InsanusMokrassar/IObjectKAndroidRealisations')
                root.children().last() + pomConfig

                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
//    publications = [artifactName]
    pkg {
        repo = "StandardRepository"
        name = artifactName
        vcsUrl = "https://github.com/InsanusMokrassar/$artifactName"
        publicDownloadNumbers = true
        version {
            name = "${project.version/100}"
            released  = new Date()
            vcsTag = "${project.version/100}"
        }
    }
    copySpec {
        from("$buildDir/output/aar/library-release.aar")
    }
}
